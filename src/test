import java.util.ArrayList;
import java.util.Arrays;
import java.util.Random;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        char table [][]  =  {{' ', ' ', ' '},  {' ', ' ', ' '},  {' ', ' ', ' '}};;
        char Player1='X';
        char Player2='O';
        boolean winresult = false ;

        System.out.println("Welcome to the tic tac toe game, do you want to play with me y/n? (BTW I'm the computer)");
        char Userinput= input.next().charAt(0);

        if(Userinput=='y'){
            // play method
            PrintGame(table);
            char userturn;
            while (true) {
                System.out.println("Where do you like to play? (1-9)");
                 userturn = input.next().charAt(0);
                if (ValidTurn(table, userturn)){
                    Playgame(table, Player1);
                    PrintGame(table);
                } else {
                    System.out.println(userturn + " is not a valid move.");
                }
            }


        }else
            System.out.println("See you next time");

        }

    public static void PrintGame(char [][] table) {
        for(char [] row : table){
            for( int c : row){
                System.out.print((char)c+"| ");
            }
            System.out.println("\n - - - - -  - ");
        }
    }

    public static void Playgame( char [][] table, char Playerchoice){
        char UserChoice = Playerchoice;
        // User choice
        if(UserChoice=='1') {
            table[0][0] = Playerchoice;
            PrintGame(table);
        } else if (UserChoice=='2') {
            table[0][1] = Playerchoice;
            PrintGame(table);
      }
        else if (UserChoice=='3') {
            table[0][2] = Playerchoice;
            PrintGame(table);
        }
        else if (UserChoice=='4') {
            table[1][0] = Playerchoice;
            PrintGame(table);
        }
        else if (UserChoice=='5') {
            table[1][1] = Playerchoice;
            PrintGame(table);
        }
        else if (UserChoice=='6') {
            table[1][2] = Playerchoice;
            PrintGame(table);
        }
        else if (UserChoice=='7') {
            table[2][0] = Playerchoice;
            PrintGame(table);
        }
        else if (UserChoice=='8') {
            table[2][1] = Playerchoice;
            PrintGame(table);
        }
        else if (UserChoice=='9') {
            table[2][2] = Playerchoice;
            PrintGame(table);
        }
            }

            public static boolean ValidTurn( char [][] table, char Playerchoice){
                    switch(Playerchoice) {
                        case '1':
                            return (table[0][0] == ' ');
                        case '2':
                            return (table[0][1] == ' ');
                        case '3':
                            return (table[0][2] == ' ');
                        case '4':
                            return (table[1][0] == ' ');
                        case '5':
                            return (table[1][1] == ' ');
                        case '6':
                            return (table[1][2] == ' ');
                        case '7':
                            return (table[2][0] == ' ');
                        case '8':
                            return (table[2][1] == ' ');
                        case '9':
                            return (table[2][2] == ' ');
                        default:
                            return false;
                    }
            }
             public static void CheckWinner(){

             }



    }







